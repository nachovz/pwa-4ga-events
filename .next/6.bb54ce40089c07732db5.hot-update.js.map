{"version":3,"file":"6.bb54ce40089c07732db5.hot-update.js","sources":["webpack:///pages/event.js"],"sourcesContent":["import {Component} from \"react\";\nimport Moment from \"moment\";\nimport PropTypes from 'prop-types';\nimport Head from 'next/head';\n//import ReactGA from 'react-ga';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\nimport DirectionsIcon from '@material-ui/icons/Directions';\nimport LabelIcon from '@material-ui/icons/Label';\nimport CheckIcon from '@material-ui/icons/Check';\nimport AnnouncementIcon from '@material-ui/icons/Announcement';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CustomChip from '../component/CustomChip.jsx';\nimport ReactHtmlParser from 'react-html-parser';\nimport {\n  FacebookShareButton,\n  GooglePlusShareButton,\n  LinkedinShareButton,\n  TwitterShareButton,\n  TelegramShareButton,\n  WhatsappShareButton,\n  PinterestShareButton,\n  RedditShareButton,\n  EmailShareButton,\n  \n  FacebookIcon,\n  TwitterIcon,\n  GooglePlusIcon,\n  LinkedinIcon,\n  PinterestIcon,\n  TelegramIcon,\n  WhatsappIcon,\n  RedditIcon,\n  EmailIcon\n} from 'react-share';\n\nimport Router from 'next/router';\nimport ReactPlaceholder from 'react-placeholder';\nimport \"react-placeholder/lib/reactPlaceholder.css\";\n\n//import {Consumer} from '../stores/AppContext.jsx';\n\nconst styles = theme => ({\n  card: {\n    maxWidth: 1000,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginBottom: 44\n  },\n  cardHeader: {\n      paddingBottom:0\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%' // 16:9\n  },\n  actions: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    padding: '8px 12px'\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    }),\n    marginLeft: 'auto'\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)'\n  },\n  avatar: {\n    margin: 10\n  },\n  bigAvatar: {\n    width: 60,\n    height: 60\n  },\n  margin: {\n    marginRight: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit\n  },\n  progress: {\n    margin: theme.spacing.unit * 2\n  },\n  badgesContainer: {\n    padding: theme.spacing.unit+\"px 0\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-end\",\n    flexWrap: \"wrap\"\n  },\n  chip: {\n    marginLeft: 0,\n    color: theme.palette.primary.light,\n    backgroundColor: theme.palette.primary.contrastText,\n    border: \"1px solid \"+theme.palette.primary.light\n  },\n  chipAvatar: {\n    backgroundColor: theme.palette.primary.contrastText,\n    height:30,\n    width:30\n  },\n  clickable: {\n    boxShadow: \"0px 1px 5px 0px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 3px 1px -2px rgba(0, 0, 0, 0.12)\"\n  },\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing.unit * 2,\n    right: theme.spacing.unit * 2\n  },\n  eventContent:{\n    padding: theme.spacing.unit\n  }\n});\n\nclass Event extends Component {\n    \n    constructor(props){\n        super(props);\n        \n        this.state = {\n            event: {},\n            ready: false\n        }\n        \n        this.actions = {\n            loadApiData: () => {\n                //console.log(this.props);\n                fetch('https://assets.breatheco.de/apis/event/'+this.props.router.query.id)\n                    .then( (response) => {\n                        if (response.status !== 200) {\n                            throw new Error(response.statusText);\n                        }\n                        return response.json();\n                    }).then( (data) => {\n                        //data = data.filter( event => Moment(event.event_date).diff( Moment(), \"d\" ) > 0 );\n                        this.setState({event: data, ready: true});\n                  }).catch(error => {\n                    console.log(error);\n                    this.setState({event: {\n                                              \"description\": \"<h2>4Geeks Nights - Learn to Code for Free</h2><p>Coding is no longer a dream. We are closing the gap and bringing coding to your life. A master platform, full of exercises and content, for free.</p><p>To begin, we will give you free access to our Coding Introduction Program, where you will find everything you need to start your training as a software developer. HTML, CSS, Bootstrap, JavaScript and more. This is not only reading, videos, and tutorials, but tons of exercises and projects to work with.</p><p><br></p><p>We have&nbsp;at least five&nbsp;GREAT reasons why you should&nbsp;attend&nbsp;our 4Geeks Nights event on June&nbsp;28th:</p><p><br></p><p>- You will&nbsp;have&nbsp;FREE access to the Coding Intro Program and platform.&nbsp;Learning&nbsp;to Code has never been easy and&nbsp;better.</p><p><br></p><p>- You will&nbsp;receive&nbsp;free mentorship hours every&nbsp;week.</p><p><br></p><p>- Our Career Support program speaks for&nbsp;itselfâ€¦You&nbsp;will meetsome of&nbsp;our&nbsp;Alumni and hear about their personal projects and overall experience&nbsp;at 4Geeks!</p><p><br></p><p>- You will have fun while meeting our entire team &amp; office: Founders, instructors, partners and classroom spaces. Have a drink with us!</p><p><br></p><p>- You will get the details about our Software Program. Full Stack + Part-time + Premium Education + Best pricing&nbsp;options.</p><p><br></p><p>- Play Kill the Bug and earn a prize!</p><p><br></p><p>We are launching new programs every two months&nbsp;and you canbecome part of our&nbsp;next 4Geeks Alumni as a Full-Stack Software Developer. Get ready to change your&nbsp;life!</p><p><br></p><p>Come. Have fun. Learn to Code. Let's celebrate together our way of making Coding a possibility&nbsp;to your current or new career.</p><p><br></p><p>A little bit about our program:</p><p><br></p><p>Become a software developer in 16 weeks, with a part-time/blended methodology and with pricing options starting at$140/mo.&nbsp;You will get&nbsp;over&nbsp;320 hours of&nbsp;training in&nbsp;a gamified program designed to be 100% hands-on.</p><p><br></p><p>Our Syllabus is based on&nbsp;JavaScript, React JS, Python, Django, Mongo DB, AJAX, API,&nbsp;and&nbsp;other exciting technologies. You will be trained in the most&nbsp;desired&nbsp;technologies in&nbsp;Miami in exactlywhat companies are looking for!</p><p><br></p><p>NOTE: Our programs&nbsp;have a maximum capacity of 14&nbsp;students, so there are only a few spots availableper cohort. Just click here if you want to meet with us.&nbsp;The next program&nbsp;will start&nbsp;on August 13th.&nbsp;This is your chance to understand how Coding will change your professional life!</p>\",\n                                              \"title\": \"4Geeks Nights: INFO+CODING+GAMES+DRINKS\",\n                                              \"url\": \"https://www.eventbrite.com/e/4geeks-nights-infocodinggamesdrinks-tickets-47588520546\",\n                                              \"capacity\": \"100\",\n                                              \"event_date\": \"2018-07-28 06:00:00\",\n                                              \"type\": \"4geeks_night\",\n                                              \"address\": \"66 West Flagler Street  #900\",\n                                              \"location_slug\": \"downtown-miami\",\n                                              \"lang\": \"en\",\n                                              \"city_slug\": \"miami\",\n                                              \"banner_url\": \"https://img.evbuc.com/https%3A%2F%2Fcdn.evbuc.com%2Fimages%2F46680560%2F154764716258%2F1%2Foriginal.jpg?rect=0%2C60%2C960%2C480&auto=compress&w=2000&s=af8051ba98cddee95edbcd4ec904f334\",\n                                              \"invite_only\": \"false\",\n                                              \"created_at\": \"2018-06-29 10:31:56\",\n                                              \"id\": \"2\",\n                                              \"status\": \"published\",\n                                              \"logo_url\": null\n                                            }, ready: true\n                    });\n                });\n            }\n        }\n    }\n    \n    static getInitialProps(props){\n        //console.log(props);\n        return{id: props.query.id };\n    }\n    \n    componentDidMount(){\n        //console.log(this.props);\n        //console.log(window);\n        \n        this.actions.loadApiData();\n    }\n    \n    render(){\n        const { classes } = this.props;\n        //const theid = this.props.id;\n        const url = typeof window !== 'undefined'  ? window.location.href : this.props.router.asPath;\n        //console.log(eventOnly);\n        //ReactGA.pageview(window.location.pathname + window.location.search);\n        //const event = eventOnly.find( event => parseInt(event.id, 10) === parseInt(theid, 10) );\n        \n        //if(typeof event === 'undefined') return( \n            \n            //);\n        const event = this.state.event;\n        let eventDay, eventTime = eventDay = \"TBA\";\n        let description = \"\";\n        if( event.event_date !== null && typeof event.event_date !== 'undefined' ){\n            eventDay = event.event_date.replace(/\\s/g, 'T').replace(/-/g, '').replace(/:/g, '');\n            eventDay = Moment(eventDay);\n            eventTime = eventDay.format(\"h:mm a\").toString();\n            eventDay = eventDay.format(\"MMMM D\").toString();\n            \n            description = event.description;\n        }\n        \n        return (\n            <ReactPlaceholder style={{marginTop: 16}} showLoadingAnimation={true} type='media' ready={this.state.ready} rows={4}>\n                <Head>\n                    <link rel=\"canonical\" href={url} />\n                    <link rel=\"manifest\" href=\"/static/manifest.json\" />\n                    <meta name=\"theme-color\" content=\"#ff6600\" />\n                    <link rel=\"shortcut icon\" href=\"/static/icon.png\" />\n                    <link rel=\"apple-touch-icon\" href=\"/static/icon.png\" />\n                    <meta name=\"apple-mobile-web-app-title\" content={event.title} />\n                    <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"default\" />\n                    <meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n                    <meta name=\"mobile-web-app-capable\" content=\"yes\" />\n                    <meta name=\"description\" content={description} />\n                    <meta property=\"og:type\" content=\"article\"/>  \n                    <meta property=\"og:url\" content={url}/>\n                    <meta property=\"og:image\" content={event.banner_url}/>  \n                    <meta property=\"og:title\" content={event.title}/>  \n                    <meta property=\"og:description\" content={description}/>  \n                    <meta name=\"twitter:card\" content=\"summary\"/>  \n                    <meta name=\"twitter:image\" content={event.banner_url}/>  \n                    <meta name=\"twitter:title\" content={event.title}/>  \n                    <meta name=\"twitter:description\" content={description}/>  \n                </Head>\n                \n                <Card className={classes.card}>\n                    <CardHeader\n                        avatar={\n                            <Avatar\n                                aria-label=\"Recipe\"\n                                src={event.logo_url || \"https://pbs.twimg.com/profile_images/930433054371434496/v8GNrusZ_400x400.jpg\"}\n                                className={classNames(classes.avatar, classes.bigAvatar)}\n                            />\n                        }\n                        title={event.title}\n                        subheader={eventDay+\" \"+eventTime}\n                        className={classes.cardHeader}\n                    />\n                    {\n                        event.banner_url &&\n                        <CardMedia\n                            className={classes.media}\n                            image={event.banner_url}\n                        />\n                    }\n                    <CardContent>\n                        <div className={classes.badgesContainer}>\n                            <div>\n                                { event.address && (\n                                    <CustomChip \n                                        classes={classes} \n                                        label={event.address}\n                                        clickable={true}\n                                        onClick={() => window.open(\"https://maps.google.com/maps?q=\"+event.address , \"_blank\")}\n                                        icon={<DirectionsIcon />}\n                                    />\n                                    )\n                                }\n                                { event.capacity && (\n                                    <CustomChip \n                                        classes={classes} \n                                        label={event.capacity}\n                                        tooltipTitle=\"Capacity\"\n                                        icon={<GroupIcon/>}\n                                    />\n                                    )\n                                }\n                                { event.type && (\n                                    <CustomChip \n                                        classes={classes} \n                                        label={event.type}\n                                        tooltipTitle=\"Type\"\n                                        icon={<LabelIcon/>}\n                                    />\n                                    )\n                                }\n                                { event.city_slug && (\n                                    <CustomChip \n                                        classes={classes} \n                                        label={event.city_slug.toUpperCase()}\n                                        icon={<LocationCityIcon/>}\n                                    />\n                                    )\n                                }\n                                { event.invite_only === \"1\" && (\n                                    <CustomChip \n                                        classes={classes} \n                                        label=\"Invitation required\"\n                                        tooltipTitle=\"Invitation Only\"\n                                        icon={<AnnouncementIcon/>}\n                                    />\n                                    )\n                                }\n                            </div>\n                            <div className='rsvpContainer'>\n                                <a href={event.url} style={{textDecoration: 'none'}}>\n                                    <Button size=\"large\" variant={\"raised\"} color=\"secondary\" className={classNames(classes.button)}>\n                                        RSVP\n                                    </Button>\n                                </a>\n                            </div>\n                        </div>\n                        <div className={classes.eventContent}>\n                            { ReactHtmlParser(description.replace(/<br>/g, '')) }\n                        </div>\n                    </CardContent>\n                    <CardActions className={classes.actions} disableActionSpacing>\n                        <IconButton aria-label=\"Facebook Share\">\n                            <FacebookShareButton \n                                url={url}> \n                                <FacebookIcon size={32} round />\n                            </FacebookShareButton>\n                        </IconButton>\n                        <IconButton aria-label=\"Facebook Share\">\n                            <GooglePlusShareButton url={url}>\n                                <GooglePlusIcon size={32} round />\n                            </GooglePlusShareButton>\n                        </IconButton>\n                        <IconButton aria-label=\"Facebook Share\">\n                            <TwitterShareButton url={url}>\n                                <TwitterIcon size={32} round />\n                            </TwitterShareButton >\n                        </IconButton>\n                        <IconButton aria-label=\"Facebook Share\">\n                            <LinkedinShareButton url={url}>\n                                <LinkedinIcon size={32} round />\n                            </LinkedinShareButton >\n                        </IconButton>\n                        <IconButton aria-label=\"Facebook Share\">\n                            <TelegramShareButton url={url}>\n                                <TelegramIcon size={32} round />\n                            </TelegramShareButton >\n                        </IconButton>\n                        <IconButton aria-label=\"Facebook Share\">\n                            <WhatsappShareButton url={url}>\n                                <WhatsappIcon size={32} round />\n                            </WhatsappShareButton >\n                        </IconButton>\n                        {\n                            event.banner_url &&\n                            <IconButton aria-label=\"Facebook Share\">\n                                <PinterestShareButton url={url} media={event.banner_url}>\n                                    <PinterestIcon size={32} round />\n                                </PinterestShareButton >\n                            </IconButton>\n                        }\n                        <IconButton aria-label=\"Facebook Share\">\n                            <RedditShareButton url={url}>\n                                <RedditIcon size={32} round />\n                            </RedditShareButton >\n                        </IconButton>\n                        <IconButton aria-label=\"Facebook Share\">\n                            <EmailShareButton url={url}>\n                                <EmailIcon size={32} round />\n                            </EmailShareButton >\n                        </IconButton>\n                    </CardActions>\n                    <Button \n                        id=\"fabButton\"\n                        variant=\"fab\" \n                        color=\"secondary\" \n                        className={classNames(classes.button, classes.fab)} \n                        onClick={() => window.open(event.url,\"_blank\")}>\n                        <Tooltip open={true} title=\"RSVP âž¤ \" placement=\"left\">\n                            <CheckIcon/>\n                        </Tooltip>\n                    </Button>\n                </Card>\n            </ReactPlaceholder>\n        );\n    }\n}\nexport default withStyles(styles)(Event);\n\nEvent.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\n\n// WEBPACK FOOTER //\n// pages/event.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAsBA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AADA;AAGA;AALA;AAOA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AArEA;AAAA;AACA;AAyEA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAiBA;AAjBA;AAmBA;AACA;AAlCA;AARA;AA4CA;AACA;;;AAMA;AACA;AACA;AAEA;AACA;;;AAEA;AAAA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAenDA;AACA;AA6PA;AAEA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}